#include "B_added_mass.h"

Eigen::MatrixXd B_added_mass(Eigen::VectorXd kwargs) {
	double x = kwargs(0);
	double y = kwargs(1);
	double z = kwargs(2);
	double phi = kwargs(3);
	double theta = kwargs(4);
	double psi = kwargs(5);
	double u = kwargs(6);
	double v = kwargs(7);
	double w = kwargs(8);
	double p = kwargs(9);
	double q = kwargs(10);
	double r = kwargs(11);
	double tau_xn = kwargs(12);
	double tau_yn = kwargs(13);
	double tau_zn = kwargs(14);
	double tau_phi = kwargs(15);
	double tau_theta = kwargs(16);
	double tau_psi = kwargs(17);
	double m_fp_stb = kwargs(18);
	double m_fp_ps = kwargs(19);
	double m_aft_stb = kwargs(20);
	double m_aft_ps = kwargs(21);
	Eigen::MatrixXd m(6, 6);
	m(0, 0) = 14000.0;
	m(0, 1) = 0;
	m(0, 2) = 0;
	m(0, 3) = 0;
	m(0, 4) = 0;
	m(0, 5) = 0;
	m(1, 0) = 0;
	m(1, 1) = 25700.0;
	m(1, 2) = 0;
	m(1, 3) = 0;
	m(1, 4) = 0;
	m(1, 5) = 0;
	m(2, 0) = 0;
	m(2, 1) = 0;
	m(2, 2) = 634000.0;
	m(2, 3) = 0;
	m(2, 4) = 0;
	m(2, 5) = 0;
	m(3, 0) = 0;
	m(3, 1) = 0;
	m(3, 2) = 0;
	m(3, 3) = 1150000.0;
	m(3, 4) = 0;
	m(3, 5) = 0;
	m(4, 0) = 0;
	m(4, 1) = 0;
	m(4, 2) = 0;
	m(4, 3) = 0;
	m(4, 4) = 3370000.0;
	m(4, 5) = 0;
	m(5, 0) = 0;
	m(5, 1) = 0;
	m(5, 2) = 0;
	m(5, 3) = 0;
	m(5, 4) = 0;
	m(5, 5) = 3530000.0;
	return m;
}